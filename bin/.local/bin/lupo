#!/usr/bin/bash
#===============================
# Notes
#
# .vars.template.bash
# .vars.bash
# ./.templates/
# ./src/
# ./html/
# ./html/tags/
# ./html/categories/
#===============================
set -o

declare -a commands=(build index)

if [[ -n $COMP_LINE ]]; then
    for c in "${commands[@]}"; do
        [[ ${c:0:${#2}} == "${2,,}" ]] && echo "$c"
    done
    exit
fi
export from_format="md"
export to_format="html"

directory_root=$PWD

if [[ ! -d "$directory_root/src" ]]; then
    echo "src not found"
    exit 1
fi

declare new_file_paths=""

_index() {
    clear
    sleep 0.5
    directory=$PWD

    if [[ -d "$directory/tags/" ]]; then
        rm -rf "$directory/tags/"
        mkdir -p "$directory/tags/"
    fi

    if [[ -e $directory/all.yml ]]; then
        rm "$directory"/all.yml
        touch "$directory"/all.yml
    fi

    while IFS="" read -r postsrcfile; do
        filepath=${postsrcfile##"$directory"/src}
        filepath="${filepath%%index.md}"

        echo -e "$filepath" >> "$directory/all.yml"

        pandoc -s "$postsrcfile" -o vars.bash --template=post.bash 2> /dev/null

        [[ ! -e $directory/vars.bash ]] && exit 1

        source "$directory/vars.bash"

        IFS=', ' read -r -a tags <<< "$tags"
        for tag in "${tags[@]}" 
        do
            if [[ ! -e "$directory/tags/$tag.yml" ]]; then
                touch "$directory/tags/$tag.yml"
            fi
            echo -e "$filepath" >> "$directory/tags/$tag.yml"
        done
        tags=()
        printf "."
    done < <(find "$directory_root/src" -iname "*.md" -type f)

    # get list of tag yml files
    # loop through the found files
    while IFS="" read -r filename; do
        readarray -d ";" -t posts < "$directory/tags/$filename"
        yaml_frontmatter="---\n"
        yaml_frontmatter+="title: Tags Page\n"
        yaml_frontmatter+="posts:\n"
        for post in "${posts[@]}"; do
            mapfile -t posta <<< "$post"

            for line in "${posta[@]}"; do
                if [[ -z $line ]]; then
                    continue
                fi
                if [[ "${line:0:6}" == "title:" ]]; then
                    yaml_frontmatter+="      - $line\n"
                else
                    yaml_frontmatter+="        $line\n"
                fi
            done
        done
        yaml_frontmatter+="---\n\n"
        yaml_frontmatter+="this is the content"
        touch "$directory/animals.template.md"
        echo -e "$yaml_frontmatter" > "$directory/animals.template.md"
        
        pandoc -s "$directory/animals.template.md" -o "$directory/animals.html" --template="$directory/tags.html"
        
        echo "end"
        exit 1
    done < <(ls "$directory/tags/")
    # for each one, create a markdown page with metadata block 
    # for the posts and content etc.
    # 
    # Run through pandoc with a tag template html file.
}

_build() {
    local first_loop=true

    while IFS="" read -r data; do
        target_file_with_full_path=${data//"src"/"html"}
        target_directory=$(dirname "$target_file_with_full_path")

        if [[ ! -d $target_directory ]]; then
            (mkdir -p "$target_directory")
        fi

        if [[ ${data##*.} == "md" ]]; then
            pandoc "$data" -t $to_format -o "$target_file_with_full_path"
        else
            cp "$data" "$target_file_with_full_path"
        fi

        echo "$target_file_with_full_path"; 

        if [[ $first_loop == false ]]; then
            new_file_paths+="\n"
        fi

        new_file_paths+="$data"
        first_loop=false
    done <  <(find "$directory_root/src" -iname "*" -type f)
}

declare CMD="$1"; shift
for c in "${commands[@]}"; do
    [[ $c == "$CMD" ]] && "_$c" "$@" && exit $?
done
